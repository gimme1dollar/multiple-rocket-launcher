
spheonix tx v.2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  000009cc  00000a60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000032  00800064  00800064  00000a64  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a64  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a94  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001115  00000000  00000000  00000b90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000075e  00000000  00000000  00001ca5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d94  00000000  00000000  00002403  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000018c  00000000  00000000  00003198  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000054c  00000000  00000000  00003324  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007a2  00000000  00000000  00003870  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00004012  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	c3 c2       	rjmp	.+1414   	; 0x59a <__vector_9>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	23 c0       	rjmp	.+70     	; 0x5e <__vector_11>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ec ec       	ldi	r30, 0xCC	; 204
  3a:	f9 e0       	ldi	r31, 0x09	; 9
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a4 36       	cpi	r26, 0x64	; 100
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	a4 e6       	ldi	r26, 0x64	; 100
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a6 39       	cpi	r26, 0x96	; 150
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	5c d3       	rcall	.+1720   	; 0x712 <main>
  5a:	b6 c4       	rjmp	.+2412   	; 0x9c8 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <__vector_11>:
   
}
void RS485_rx(uint8_t *addr, uint8_t length)
{
	PORTD &= ~RS485IO;
	UART_rx_m(addr, length);
  5e:	1f 92       	push	r1
  60:	0f 92       	push	r0
  62:	0f b6       	in	r0, 0x3f	; 63
  64:	0f 92       	push	r0
  66:	11 24       	eor	r1, r1
  68:	8f 93       	push	r24
  6a:	8c b1       	in	r24, 0x0c	; 12
  6c:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <data>
  70:	8f 91       	pop	r24
  72:	0f 90       	pop	r0
  74:	0f be       	out	0x3f, r0	; 63
  76:	0f 90       	pop	r0
  78:	1f 90       	pop	r1
  7a:	18 95       	reti

0000007c <UART_init>:
  7c:	82 30       	cpi	r24, 0x02	; 2
  7e:	69 f0       	breq	.+26     	; 0x9a <UART_init+0x1e>
  80:	18 f4       	brcc	.+6      	; 0x88 <UART_init+0xc>
  82:	81 30       	cpi	r24, 0x01	; 1
  84:	31 f0       	breq	.+12     	; 0x92 <UART_init+0x16>
  86:	14 c0       	rjmp	.+40     	; 0xb0 <UART_init+0x34>
  88:	83 30       	cpi	r24, 0x03	; 3
  8a:	59 f0       	breq	.+22     	; 0xa2 <UART_init+0x26>
  8c:	84 30       	cpi	r24, 0x04	; 4
  8e:	69 f0       	breq	.+26     	; 0xaa <UART_init+0x2e>
  90:	0f c0       	rjmp	.+30     	; 0xb0 <UART_init+0x34>
  92:	83 e3       	ldi	r24, 0x33	; 51
  94:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <ubrr>
  98:	0b c0       	rjmp	.+22     	; 0xb0 <UART_init+0x34>
  9a:	82 e2       	ldi	r24, 0x22	; 34
  9c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <ubrr>
  a0:	07 c0       	rjmp	.+14     	; 0xb0 <UART_init+0x34>
  a2:	89 e1       	ldi	r24, 0x19	; 25
  a4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <ubrr>
  a8:	03 c0       	rjmp	.+6      	; 0xb0 <UART_init+0x34>
  aa:	8c e0       	ldi	r24, 0x0C	; 12
  ac:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <ubrr>
  b0:	10 bc       	out	0x20, r1	; 32
  b2:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <ubrr>
  b6:	89 b9       	out	0x09, r24	; 9
  b8:	60 ff       	sbrs	r22, 0
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <UART_init+0x44>
  bc:	88 e0       	ldi	r24, 0x08	; 8
  be:	8a b9       	out	0x0a, r24	; 10
  c0:	86 2f       	mov	r24, r22
  c2:	84 70       	andi	r24, 0x04	; 4
  c4:	66 70       	andi	r22, 0x06	; 6
  c6:	09 f0       	breq	.+2      	; 0xca <UART_init+0x4e>
  c8:	54 9a       	sbi	0x0a, 4	; 10
  ca:	81 11       	cpse	r24, r1
  cc:	57 9a       	sbi	0x0a, 7	; 10
  ce:	88 98       	cbi	0x11, 0	; 17
  d0:	89 9a       	sbi	0x11, 1	; 17
  d2:	08 95       	ret

000000d4 <UART_tx_m>:
  d4:	66 23       	and	r22, r22
  d6:	79 f0       	breq	.+30     	; 0xf6 <UART_tx_m+0x22>
  d8:	fc 01       	movw	r30, r24
  da:	61 50       	subi	r22, 0x01	; 1
  dc:	26 2f       	mov	r18, r22
  de:	30 e0       	ldi	r19, 0x00	; 0
  e0:	2f 5f       	subi	r18, 0xFF	; 255
  e2:	3f 4f       	sbci	r19, 0xFF	; 255
  e4:	28 0f       	add	r18, r24
  e6:	39 1f       	adc	r19, r25
  e8:	5d 9b       	sbis	0x0b, 5	; 11
  ea:	fe cf       	rjmp	.-4      	; 0xe8 <UART_tx_m+0x14>
  ec:	91 91       	ld	r25, Z+
  ee:	9c b9       	out	0x0c, r25	; 12
  f0:	e2 17       	cp	r30, r18
  f2:	f3 07       	cpc	r31, r19
  f4:	c9 f7       	brne	.-14     	; 0xe8 <UART_tx_m+0x14>
  f6:	08 95       	ret

000000f8 <keypad_read>:
  f8:	86 e0       	ldi	r24, 0x06	; 6
  fa:	85 bb       	out	0x15, r24	; 21
  fc:	86 b3       	in	r24, 0x16	; 22
  fe:	e3 e9       	ldi	r30, 0x93	; 147
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 95       	com	r24
 104:	80 83       	st	Z, r24
 106:	87 ec       	ldi	r24, 0xC7	; 199
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <keypad_read+0x12>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <keypad_read+0x18>
 110:	00 00       	nop
 112:	85 e0       	ldi	r24, 0x05	; 5
 114:	85 bb       	out	0x15, r24	; 21
 116:	86 b3       	in	r24, 0x16	; 22
 118:	80 95       	com	r24
 11a:	81 83       	std	Z+1, r24	; 0x01
 11c:	87 ec       	ldi	r24, 0xC7	; 199
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <keypad_read+0x28>
 124:	00 c0       	rjmp	.+0      	; 0x126 <keypad_read+0x2e>
 126:	00 00       	nop
 128:	83 e0       	ldi	r24, 0x03	; 3
 12a:	85 bb       	out	0x15, r24	; 21
 12c:	86 b3       	in	r24, 0x16	; 22
 12e:	80 95       	com	r24
 130:	82 83       	std	Z+2, r24	; 0x02
 132:	87 ec       	ldi	r24, 0xC7	; 199
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <keypad_read+0x3e>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <keypad_read+0x44>
 13c:	00 00       	nop
 13e:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <key_l>
 142:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <key_h>
 146:	81 81       	ldd	r24, Z+1	; 0x01
 148:	84 ff       	sbrs	r24, 4
 14a:	03 c0       	rjmp	.+6      	; 0x152 <keypad_read+0x5a>
 14c:	91 e0       	ldi	r25, 0x01	; 1
 14e:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <key_l>
 152:	85 ff       	sbrs	r24, 5
 154:	05 c0       	rjmp	.+10     	; 0x160 <keypad_read+0x68>
 156:	90 91 8b 00 	lds	r25, 0x008B	; 0x80008b <key_l>
 15a:	98 60       	ori	r25, 0x08	; 8
 15c:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <key_l>
 160:	86 ff       	sbrs	r24, 6
 162:	05 c0       	rjmp	.+10     	; 0x16e <keypad_read+0x76>
 164:	90 91 8b 00 	lds	r25, 0x008B	; 0x80008b <key_l>
 168:	90 64       	ori	r25, 0x40	; 64
 16a:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <key_l>
 16e:	88 23       	and	r24, r24
 170:	1c f4       	brge	.+6      	; 0x178 <keypad_read+0x80>
 172:	84 e0       	ldi	r24, 0x04	; 4
 174:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <key_h>
 178:	80 91 95 00 	lds	r24, 0x0095	; 0x800095 <keypad_in+0x2>
 17c:	84 ff       	sbrs	r24, 4
 17e:	05 c0       	rjmp	.+10     	; 0x18a <keypad_read+0x92>
 180:	90 91 8b 00 	lds	r25, 0x008B	; 0x80008b <key_l>
 184:	92 60       	ori	r25, 0x02	; 2
 186:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <key_l>
 18a:	85 ff       	sbrs	r24, 5
 18c:	05 c0       	rjmp	.+10     	; 0x198 <keypad_read+0xa0>
 18e:	90 91 8b 00 	lds	r25, 0x008B	; 0x80008b <key_l>
 192:	90 61       	ori	r25, 0x10	; 16
 194:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <key_l>
 198:	86 ff       	sbrs	r24, 6
 19a:	05 c0       	rjmp	.+10     	; 0x1a6 <keypad_read+0xae>
 19c:	90 91 8b 00 	lds	r25, 0x008B	; 0x80008b <key_l>
 1a0:	90 68       	ori	r25, 0x80	; 128
 1a2:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <key_l>
 1a6:	88 23       	and	r24, r24
 1a8:	2c f4       	brge	.+10     	; 0x1b4 <keypad_read+0xbc>
 1aa:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <key_h>
 1ae:	82 60       	ori	r24, 0x02	; 2
 1b0:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <key_h>
 1b4:	80 91 93 00 	lds	r24, 0x0093	; 0x800093 <keypad_in>
 1b8:	84 ff       	sbrs	r24, 4
 1ba:	05 c0       	rjmp	.+10     	; 0x1c6 <keypad_read+0xce>
 1bc:	90 91 8b 00 	lds	r25, 0x008B	; 0x80008b <key_l>
 1c0:	94 60       	ori	r25, 0x04	; 4
 1c2:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <key_l>
 1c6:	85 ff       	sbrs	r24, 5
 1c8:	05 c0       	rjmp	.+10     	; 0x1d4 <keypad_read+0xdc>
 1ca:	90 91 8b 00 	lds	r25, 0x008B	; 0x80008b <key_l>
 1ce:	90 62       	ori	r25, 0x20	; 32
 1d0:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <key_l>
 1d4:	86 ff       	sbrs	r24, 6
 1d6:	05 c0       	rjmp	.+10     	; 0x1e2 <keypad_read+0xea>
 1d8:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <key_h>
 1dc:	91 60       	ori	r25, 0x01	; 1
 1de:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <key_h>
 1e2:	88 23       	and	r24, r24
 1e4:	2c f4       	brge	.+10     	; 0x1f0 <keypad_read+0xf8>
 1e6:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <key_h>
 1ea:	88 60       	ori	r24, 0x08	; 8
 1ec:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <key_h>
 1f0:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <key_h>
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	98 2f       	mov	r25, r24
 1f8:	88 27       	eor	r24, r24
 1fa:	20 91 8b 00 	lds	r18, 0x008B	; 0x80008b <key_l>
 1fe:	82 2b       	or	r24, r18
 200:	90 93 82 00 	sts	0x0082, r25	; 0x800082 <key_d16+0x1>
 204:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <key_d16>
 208:	08 95       	ret

0000020a <keypad_read_d>:
 20a:	8f ef       	ldi	r24, 0xFF	; 255
 20c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <key_d8>
 210:	73 df       	rcall	.-282    	; 0xf8 <keypad_read>
 212:	80 93 87 00 	sts	0x0087, r24	; 0x800087 <keypad_raw>
 216:	90 93 88 00 	sts	0x0088, r25	; 0x800088 <keypad_raw+0x1>
 21a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <key_h>
 21e:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <key_l>
 222:	91 ff       	sbrs	r25, 1
 224:	04 c0       	rjmp	.+8      	; 0x22e <keypad_read_d+0x24>
 226:	21 e0       	ldi	r18, 0x01	; 1
 228:	20 93 70 00 	sts	0x0070, r18	; 0x800070 <key_toggle>
 22c:	16 c0       	rjmp	.+44     	; 0x25a <keypad_read_d+0x50>
 22e:	20 91 70 00 	lds	r18, 0x0070	; 0x800070 <key_toggle>
 232:	21 30       	cpi	r18, 0x01	; 1
 234:	91 f4       	brne	.+36     	; 0x25a <keypad_read_d+0x50>
 236:	20 91 6f 00 	lds	r18, 0x006F	; 0x80006f <digit_count>
 23a:	23 30       	cpi	r18, 0x03	; 3
 23c:	20 f4       	brcc	.+8      	; 0x246 <keypad_read_d+0x3c>
 23e:	2f 5f       	subi	r18, 0xFF	; 255
 240:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 244:	03 c0       	rjmp	.+6      	; 0x24c <keypad_read_d+0x42>
 246:	21 e0       	ldi	r18, 0x01	; 1
 248:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 24c:	21 e0       	ldi	r18, 0x01	; 1
 24e:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <digit_toggle>
 252:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <key_toggle>
 256:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <key_d8>
 25a:	80 ff       	sbrs	r24, 0
 25c:	04 c0       	rjmp	.+8      	; 0x266 <keypad_read_d+0x5c>
 25e:	21 e0       	ldi	r18, 0x01	; 1
 260:	20 93 71 00 	sts	0x0071, r18	; 0x800071 <key_toggle+0x1>
 264:	16 c0       	rjmp	.+44     	; 0x292 <keypad_read_d+0x88>
 266:	20 91 71 00 	lds	r18, 0x0071	; 0x800071 <key_toggle+0x1>
 26a:	21 30       	cpi	r18, 0x01	; 1
 26c:	91 f4       	brne	.+36     	; 0x292 <keypad_read_d+0x88>
 26e:	20 91 6f 00 	lds	r18, 0x006F	; 0x80006f <digit_count>
 272:	23 30       	cpi	r18, 0x03	; 3
 274:	20 f4       	brcc	.+8      	; 0x27e <keypad_read_d+0x74>
 276:	2f 5f       	subi	r18, 0xFF	; 255
 278:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 27c:	03 c0       	rjmp	.+6      	; 0x284 <keypad_read_d+0x7a>
 27e:	21 e0       	ldi	r18, 0x01	; 1
 280:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 284:	21 e0       	ldi	r18, 0x01	; 1
 286:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <digit_toggle>
 28a:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <key_toggle+0x1>
 28e:	20 93 62 00 	sts	0x0062, r18	; 0x800062 <key_d8>
 292:	81 ff       	sbrs	r24, 1
 294:	04 c0       	rjmp	.+8      	; 0x29e <keypad_read_d+0x94>
 296:	21 e0       	ldi	r18, 0x01	; 1
 298:	20 93 72 00 	sts	0x0072, r18	; 0x800072 <key_toggle+0x2>
 29c:	17 c0       	rjmp	.+46     	; 0x2cc <keypad_read_d+0xc2>
 29e:	20 91 72 00 	lds	r18, 0x0072	; 0x800072 <key_toggle+0x2>
 2a2:	21 30       	cpi	r18, 0x01	; 1
 2a4:	99 f4       	brne	.+38     	; 0x2cc <keypad_read_d+0xc2>
 2a6:	20 91 6f 00 	lds	r18, 0x006F	; 0x80006f <digit_count>
 2aa:	23 30       	cpi	r18, 0x03	; 3
 2ac:	20 f4       	brcc	.+8      	; 0x2b6 <keypad_read_d+0xac>
 2ae:	2f 5f       	subi	r18, 0xFF	; 255
 2b0:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 2b4:	03 c0       	rjmp	.+6      	; 0x2bc <keypad_read_d+0xb2>
 2b6:	21 e0       	ldi	r18, 0x01	; 1
 2b8:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 2bc:	21 e0       	ldi	r18, 0x01	; 1
 2be:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <digit_toggle>
 2c2:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <key_toggle+0x2>
 2c6:	22 e0       	ldi	r18, 0x02	; 2
 2c8:	20 93 62 00 	sts	0x0062, r18	; 0x800062 <key_d8>
 2cc:	82 ff       	sbrs	r24, 2
 2ce:	04 c0       	rjmp	.+8      	; 0x2d8 <keypad_read_d+0xce>
 2d0:	21 e0       	ldi	r18, 0x01	; 1
 2d2:	20 93 73 00 	sts	0x0073, r18	; 0x800073 <key_toggle+0x3>
 2d6:	17 c0       	rjmp	.+46     	; 0x306 <keypad_read_d+0xfc>
 2d8:	20 91 73 00 	lds	r18, 0x0073	; 0x800073 <key_toggle+0x3>
 2dc:	21 30       	cpi	r18, 0x01	; 1
 2de:	99 f4       	brne	.+38     	; 0x306 <keypad_read_d+0xfc>
 2e0:	20 91 6f 00 	lds	r18, 0x006F	; 0x80006f <digit_count>
 2e4:	23 30       	cpi	r18, 0x03	; 3
 2e6:	20 f4       	brcc	.+8      	; 0x2f0 <keypad_read_d+0xe6>
 2e8:	2f 5f       	subi	r18, 0xFF	; 255
 2ea:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 2ee:	03 c0       	rjmp	.+6      	; 0x2f6 <keypad_read_d+0xec>
 2f0:	21 e0       	ldi	r18, 0x01	; 1
 2f2:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 2f6:	21 e0       	ldi	r18, 0x01	; 1
 2f8:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <digit_toggle>
 2fc:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <key_toggle+0x3>
 300:	23 e0       	ldi	r18, 0x03	; 3
 302:	20 93 62 00 	sts	0x0062, r18	; 0x800062 <key_d8>
 306:	83 ff       	sbrs	r24, 3
 308:	04 c0       	rjmp	.+8      	; 0x312 <keypad_read_d+0x108>
 30a:	21 e0       	ldi	r18, 0x01	; 1
 30c:	20 93 74 00 	sts	0x0074, r18	; 0x800074 <key_toggle+0x4>
 310:	17 c0       	rjmp	.+46     	; 0x340 <keypad_read_d+0x136>
 312:	20 91 74 00 	lds	r18, 0x0074	; 0x800074 <key_toggle+0x4>
 316:	21 30       	cpi	r18, 0x01	; 1
 318:	99 f4       	brne	.+38     	; 0x340 <keypad_read_d+0x136>
 31a:	20 91 6f 00 	lds	r18, 0x006F	; 0x80006f <digit_count>
 31e:	23 30       	cpi	r18, 0x03	; 3
 320:	20 f4       	brcc	.+8      	; 0x32a <keypad_read_d+0x120>
 322:	2f 5f       	subi	r18, 0xFF	; 255
 324:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 328:	03 c0       	rjmp	.+6      	; 0x330 <keypad_read_d+0x126>
 32a:	21 e0       	ldi	r18, 0x01	; 1
 32c:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 330:	21 e0       	ldi	r18, 0x01	; 1
 332:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <digit_toggle>
 336:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <key_toggle+0x4>
 33a:	24 e0       	ldi	r18, 0x04	; 4
 33c:	20 93 62 00 	sts	0x0062, r18	; 0x800062 <key_d8>
 340:	84 ff       	sbrs	r24, 4
 342:	04 c0       	rjmp	.+8      	; 0x34c <keypad_read_d+0x142>
 344:	21 e0       	ldi	r18, 0x01	; 1
 346:	20 93 75 00 	sts	0x0075, r18	; 0x800075 <key_toggle+0x5>
 34a:	17 c0       	rjmp	.+46     	; 0x37a <keypad_read_d+0x170>
 34c:	20 91 75 00 	lds	r18, 0x0075	; 0x800075 <key_toggle+0x5>
 350:	21 30       	cpi	r18, 0x01	; 1
 352:	99 f4       	brne	.+38     	; 0x37a <keypad_read_d+0x170>
 354:	20 91 6f 00 	lds	r18, 0x006F	; 0x80006f <digit_count>
 358:	23 30       	cpi	r18, 0x03	; 3
 35a:	20 f4       	brcc	.+8      	; 0x364 <keypad_read_d+0x15a>
 35c:	2f 5f       	subi	r18, 0xFF	; 255
 35e:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 362:	03 c0       	rjmp	.+6      	; 0x36a <keypad_read_d+0x160>
 364:	21 e0       	ldi	r18, 0x01	; 1
 366:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 36a:	21 e0       	ldi	r18, 0x01	; 1
 36c:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <digit_toggle>
 370:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <key_toggle+0x5>
 374:	25 e0       	ldi	r18, 0x05	; 5
 376:	20 93 62 00 	sts	0x0062, r18	; 0x800062 <key_d8>
 37a:	85 ff       	sbrs	r24, 5
 37c:	04 c0       	rjmp	.+8      	; 0x386 <keypad_read_d+0x17c>
 37e:	21 e0       	ldi	r18, 0x01	; 1
 380:	20 93 76 00 	sts	0x0076, r18	; 0x800076 <key_toggle+0x6>
 384:	17 c0       	rjmp	.+46     	; 0x3b4 <keypad_read_d+0x1aa>
 386:	20 91 76 00 	lds	r18, 0x0076	; 0x800076 <key_toggle+0x6>
 38a:	21 30       	cpi	r18, 0x01	; 1
 38c:	99 f4       	brne	.+38     	; 0x3b4 <keypad_read_d+0x1aa>
 38e:	20 91 6f 00 	lds	r18, 0x006F	; 0x80006f <digit_count>
 392:	23 30       	cpi	r18, 0x03	; 3
 394:	20 f4       	brcc	.+8      	; 0x39e <keypad_read_d+0x194>
 396:	2f 5f       	subi	r18, 0xFF	; 255
 398:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 39c:	03 c0       	rjmp	.+6      	; 0x3a4 <keypad_read_d+0x19a>
 39e:	21 e0       	ldi	r18, 0x01	; 1
 3a0:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 3a4:	21 e0       	ldi	r18, 0x01	; 1
 3a6:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <digit_toggle>
 3aa:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <key_toggle+0x6>
 3ae:	26 e0       	ldi	r18, 0x06	; 6
 3b0:	20 93 62 00 	sts	0x0062, r18	; 0x800062 <key_d8>
 3b4:	86 ff       	sbrs	r24, 6
 3b6:	04 c0       	rjmp	.+8      	; 0x3c0 <keypad_read_d+0x1b6>
 3b8:	21 e0       	ldi	r18, 0x01	; 1
 3ba:	20 93 77 00 	sts	0x0077, r18	; 0x800077 <key_toggle+0x7>
 3be:	17 c0       	rjmp	.+46     	; 0x3ee <keypad_read_d+0x1e4>
 3c0:	20 91 77 00 	lds	r18, 0x0077	; 0x800077 <key_toggle+0x7>
 3c4:	21 30       	cpi	r18, 0x01	; 1
 3c6:	99 f4       	brne	.+38     	; 0x3ee <keypad_read_d+0x1e4>
 3c8:	20 91 6f 00 	lds	r18, 0x006F	; 0x80006f <digit_count>
 3cc:	23 30       	cpi	r18, 0x03	; 3
 3ce:	20 f4       	brcc	.+8      	; 0x3d8 <keypad_read_d+0x1ce>
 3d0:	2f 5f       	subi	r18, 0xFF	; 255
 3d2:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 3d6:	03 c0       	rjmp	.+6      	; 0x3de <keypad_read_d+0x1d4>
 3d8:	21 e0       	ldi	r18, 0x01	; 1
 3da:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <digit_count>
 3de:	21 e0       	ldi	r18, 0x01	; 1
 3e0:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <digit_toggle>
 3e4:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <key_toggle+0x7>
 3e8:	27 e0       	ldi	r18, 0x07	; 7
 3ea:	20 93 62 00 	sts	0x0062, r18	; 0x800062 <key_d8>
 3ee:	88 23       	and	r24, r24
 3f0:	24 f4       	brge	.+8      	; 0x3fa <keypad_read_d+0x1f0>
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <key_toggle+0x8>
 3f8:	17 c0       	rjmp	.+46     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 3fa:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <key_toggle+0x8>
 3fe:	81 30       	cpi	r24, 0x01	; 1
 400:	99 f4       	brne	.+38     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 402:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <digit_count>
 406:	83 30       	cpi	r24, 0x03	; 3
 408:	20 f4       	brcc	.+8      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40a:	8f 5f       	subi	r24, 0xFF	; 255
 40c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <digit_count>
 410:	03 c0       	rjmp	.+6      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <digit_count>
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <digit_toggle>
 41e:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <key_toggle+0x8>
 422:	88 e0       	ldi	r24, 0x08	; 8
 424:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <key_d8>
 428:	90 ff       	sbrs	r25, 0
 42a:	04 c0       	rjmp	.+8      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 42c:	81 e0       	ldi	r24, 0x01	; 1
 42e:	80 93 79 00 	sts	0x0079, r24	; 0x800079 <key_toggle+0x9>
 432:	17 c0       	rjmp	.+46     	; 0x462 <__stack+0x3>
 434:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <key_toggle+0x9>
 438:	81 30       	cpi	r24, 0x01	; 1
 43a:	99 f4       	brne	.+38     	; 0x462 <__stack+0x3>
 43c:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <digit_count>
 440:	83 30       	cpi	r24, 0x03	; 3
 442:	20 f4       	brcc	.+8      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 444:	8f 5f       	subi	r24, 0xFF	; 255
 446:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <digit_count>
 44a:	03 c0       	rjmp	.+6      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 44c:	81 e0       	ldi	r24, 0x01	; 1
 44e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <digit_count>
 452:	81 e0       	ldi	r24, 0x01	; 1
 454:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <digit_toggle>
 458:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <key_toggle+0x9>
 45c:	89 e0       	ldi	r24, 0x09	; 9
 45e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <key_d8>
 462:	92 ff       	sbrs	r25, 2
 464:	04 c0       	rjmp	.+8      	; 0x46e <__stack+0xf>
 466:	81 e0       	ldi	r24, 0x01	; 1
 468:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <key_toggle+0xa>
 46c:	1b c0       	rjmp	.+54     	; 0x4a4 <__stack+0x45>
 46e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <key_toggle+0xa>
 472:	81 30       	cpi	r24, 0x01	; 1
 474:	b9 f4       	brne	.+46     	; 0x4a4 <__stack+0x45>
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <digit_toggle>
 47c:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <YPtoggle>
 480:	83 30       	cpi	r24, 0x03	; 3
 482:	31 f4       	brne	.+12     	; 0x490 <__stack+0x31>
 484:	82 e0       	ldi	r24, 0x02	; 2
 486:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <YPtoggle>
 48a:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <digit_count>
 48e:	05 c0       	rjmp	.+10     	; 0x49a <__stack+0x3b>
 490:	83 e0       	ldi	r24, 0x03	; 3
 492:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <YPtoggle>
 496:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <digit_count>
 49a:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <key_toggle+0xa>
 49e:	8b e0       	ldi	r24, 0x0B	; 11
 4a0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <key_d8>
 4a4:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <key_h>
 4a8:	83 ff       	sbrs	r24, 3
 4aa:	04 c0       	rjmp	.+8      	; 0x4b4 <__stack+0x55>
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <key_toggle+0xb>
 4b2:	17 c0       	rjmp	.+46     	; 0x4e2 <__stack+0x83>
 4b4:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <key_toggle+0xb>
 4b8:	81 30       	cpi	r24, 0x01	; 1
 4ba:	99 f4       	brne	.+38     	; 0x4e2 <__stack+0x83>
 4bc:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <digit_count>
 4c0:	83 30       	cpi	r24, 0x03	; 3
 4c2:	20 f4       	brcc	.+8      	; 0x4cc <__stack+0x6d>
 4c4:	8f 5f       	subi	r24, 0xFF	; 255
 4c6:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <digit_count>
 4ca:	03 c0       	rjmp	.+6      	; 0x4d2 <__stack+0x73>
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <digit_count>
 4d2:	81 e0       	ldi	r24, 0x01	; 1
 4d4:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <digit_toggle>
 4d8:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <key_toggle+0xb>
 4dc:	8c e0       	ldi	r24, 0x0C	; 12
 4de:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <key_d8>
 4e2:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <key_d8>
 4e6:	08 95       	ret

000004e8 <keypad_read_m>:
 4e8:	90 de       	rcall	.-736    	; 0x20a <keypad_read_d>
 4ea:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <digit_count>
 4ee:	91 30       	cpi	r25, 0x01	; 1
 4f0:	91 f4       	brne	.+36     	; 0x516 <keypad_read_m+0x2e>
 4f2:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <digit_toggle>
 4f6:	99 23       	and	r25, r25
 4f8:	09 f4       	brne	.+2      	; 0x4fc <keypad_read_m+0x14>
 4fa:	43 c0       	rjmp	.+134    	; 0x582 <keypad_read_m+0x9a>
 4fc:	24 e6       	ldi	r18, 0x64	; 100
 4fe:	82 9f       	mul	r24, r18
 500:	c0 01       	movw	r24, r0
 502:	11 24       	eor	r1, r1
 504:	90 93 84 00 	sts	0x0084, r25	; 0x800084 <key_m16+0x1>
 508:	80 93 83 00 	sts	0x0083, r24	; 0x800083 <key_m16>
 50c:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <digit_toggle>
 510:	8f ef       	ldi	r24, 0xFF	; 255
 512:	9f ef       	ldi	r25, 0xFF	; 255
 514:	08 95       	ret
 516:	92 30       	cpi	r25, 0x02	; 2
 518:	f9 f4       	brne	.+62     	; 0x558 <keypad_read_m+0x70>
 51a:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <digit_toggle>
 51e:	99 23       	and	r25, r25
 520:	99 f1       	breq	.+102    	; 0x588 <keypad_read_m+0xa0>
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	9c 01       	movw	r18, r24
 526:	22 0f       	add	r18, r18
 528:	33 1f       	adc	r19, r19
 52a:	88 0f       	add	r24, r24
 52c:	99 1f       	adc	r25, r25
 52e:	88 0f       	add	r24, r24
 530:	99 1f       	adc	r25, r25
 532:	88 0f       	add	r24, r24
 534:	99 1f       	adc	r25, r25
 536:	82 0f       	add	r24, r18
 538:	93 1f       	adc	r25, r19
 53a:	20 91 83 00 	lds	r18, 0x0083	; 0x800083 <key_m16>
 53e:	30 91 84 00 	lds	r19, 0x0084	; 0x800084 <key_m16+0x1>
 542:	82 0f       	add	r24, r18
 544:	93 1f       	adc	r25, r19
 546:	90 93 84 00 	sts	0x0084, r25	; 0x800084 <key_m16+0x1>
 54a:	80 93 83 00 	sts	0x0083, r24	; 0x800083 <key_m16>
 54e:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <digit_toggle>
 552:	8f ef       	ldi	r24, 0xFF	; 255
 554:	9f ef       	ldi	r25, 0xFF	; 255
 556:	08 95       	ret
 558:	93 30       	cpi	r25, 0x03	; 3
 55a:	c9 f4       	brne	.+50     	; 0x58e <keypad_read_m+0xa6>
 55c:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <digit_toggle>
 560:	99 23       	and	r25, r25
 562:	c1 f0       	breq	.+48     	; 0x594 <keypad_read_m+0xac>
 564:	20 91 83 00 	lds	r18, 0x0083	; 0x800083 <key_m16>
 568:	30 91 84 00 	lds	r19, 0x0084	; 0x800084 <key_m16+0x1>
 56c:	a9 01       	movw	r20, r18
 56e:	48 0f       	add	r20, r24
 570:	51 1d       	adc	r21, r1
 572:	ca 01       	movw	r24, r20
 574:	50 93 84 00 	sts	0x0084, r21	; 0x800084 <key_m16+0x1>
 578:	40 93 83 00 	sts	0x0083, r20	; 0x800083 <key_m16>
 57c:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <digit_toggle>
 580:	08 95       	ret
 582:	8f ef       	ldi	r24, 0xFF	; 255
 584:	9f ef       	ldi	r25, 0xFF	; 255
 586:	08 95       	ret
 588:	8f ef       	ldi	r24, 0xFF	; 255
 58a:	9f ef       	ldi	r25, 0xFF	; 255
 58c:	08 95       	ret
 58e:	8f ef       	ldi	r24, 0xFF	; 255
 590:	9f ef       	ldi	r25, 0xFF	; 255
 592:	08 95       	ret
 594:	8f ef       	ldi	r24, 0xFF	; 255
 596:	9f ef       	ldi	r25, 0xFF	; 255
 598:	08 95       	ret

0000059a <__vector_9>:
 59a:	1f 92       	push	r1
 59c:	0f 92       	push	r0
 59e:	0f b6       	in	r0, 0x3f	; 63
 5a0:	0f 92       	push	r0
 5a2:	11 24       	eor	r1, r1
 5a4:	8f 93       	push	r24
 5a6:	85 e0       	ldi	r24, 0x05	; 5
 5a8:	82 bf       	out	0x32, r24	; 50
 5aa:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <timer_temp_a>
 5ae:	8f 5f       	subi	r24, 0xFF	; 255
 5b0:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <timer_temp_a>
 5b4:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <timer_temp_b>
 5b8:	8f 5f       	subi	r24, 0xFF	; 255
 5ba:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <timer_temp_b>
 5be:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <timer_temp_a>
 5c2:	8c 30       	cpi	r24, 0x0C	; 12
 5c4:	38 f0       	brcs	.+14     	; 0x5d4 <__vector_9+0x3a>
 5c6:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <timer_100ms>
 5ca:	8f 5f       	subi	r24, 0xFF	; 255
 5cc:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <timer_100ms>
 5d0:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <timer_temp_a>
 5d4:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <timer_temp_b>
 5d8:	85 30       	cpi	r24, 0x05	; 5
 5da:	38 f0       	brcs	.+14     	; 0x5ea <__vector_9+0x50>
 5dc:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <timer_40ms>
 5e0:	8f 5f       	subi	r24, 0xFF	; 255
 5e2:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <timer_40ms>
 5e6:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <timer_temp_b>
 5ea:	8f 91       	pop	r24
 5ec:	0f 90       	pop	r0
 5ee:	0f be       	out	0x3f, r0	; 63
 5f0:	0f 90       	pop	r0
 5f2:	1f 90       	pop	r1
 5f4:	18 95       	reti

000005f6 <init>:
 5f6:	82 e0       	ldi	r24, 0x02	; 2
 5f8:	87 bb       	out	0x17, r24	; 23
 5fa:	82 ee       	ldi	r24, 0xE2	; 226
 5fc:	81 bb       	out	0x11, r24	; 17
 5fe:	87 e0       	ldi	r24, 0x07	; 7
 600:	84 bb       	out	0x14, r24	; 20
 602:	84 e0       	ldi	r24, 0x04	; 4
 604:	83 bf       	out	0x33, r24	; 51
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	89 bf       	out	0x39, r24	; 57
 60a:	82 ea       	ldi	r24, 0xA2	; 162
 60c:	8f bd       	out	0x2f, r24	; 47
 60e:	8a e1       	ldi	r24, 0x1A	; 26
 610:	8e bd       	out	0x2e, r24	; 46
 612:	8f e0       	ldi	r24, 0x0F	; 15
 614:	97 e2       	ldi	r25, 0x27	; 39
 616:	97 bd       	out	0x27, r25	; 39
 618:	86 bd       	out	0x26, r24	; 38
 61a:	8a ea       	ldi	r24, 0xAA	; 170
 61c:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <cmd>
 620:	08 95       	ret

00000622 <buzzer>:
 622:	e8 2f       	mov	r30, r24
 624:	46 b5       	in	r20, 0x26	; 38
 626:	57 b5       	in	r21, 0x27	; 39
 628:	9a 01       	movw	r18, r20
 62a:	a5 e0       	ldi	r26, 0x05	; 5
 62c:	b2 e0       	ldi	r27, 0x02	; 2
 62e:	ac d1       	rcall	.+856    	; 0x988 <__umulhisi3>
 630:	48 1b       	sub	r20, r24
 632:	59 0b       	sbc	r21, r25
 634:	56 95       	lsr	r21
 636:	47 95       	ror	r20
 638:	84 0f       	add	r24, r20
 63a:	95 1f       	adc	r25, r21
 63c:	00 24       	eor	r0, r0
 63e:	88 0f       	add	r24, r24
 640:	99 1f       	adc	r25, r25
 642:	00 1c       	adc	r0, r0
 644:	88 0f       	add	r24, r24
 646:	99 1f       	adc	r25, r25
 648:	00 1c       	adc	r0, r0
 64a:	89 2f       	mov	r24, r25
 64c:	90 2d       	mov	r25, r0
 64e:	e8 9f       	mul	r30, r24
 650:	90 01       	movw	r18, r0
 652:	e9 9f       	mul	r30, r25
 654:	30 0d       	add	r19, r0
 656:	11 24       	eor	r1, r1
 658:	3b bd       	out	0x2b, r19	; 43
 65a:	2a bd       	out	0x2a, r18	; 42
 65c:	08 95       	ret

0000065e <check_password>:
 65e:	cf 93       	push	r28
 660:	c1 e0       	ldi	r28, 0x01	; 1
 662:	d3 dd       	rcall	.-1114   	; 0x20a <keypad_read_d>
 664:	81 30       	cpi	r24, 0x01	; 1
 666:	39 f4       	brne	.+14     	; 0x676 <check_password+0x18>
 668:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <digit_count>
 66c:	81 30       	cpi	r24, 0x01	; 1
 66e:	d9 f4       	brne	.+54     	; 0x6a6 <check_password+0x48>
 670:	c0 93 68 00 	sts	0x0068, r28	; 0x800068 <password>
 674:	18 c0       	rjmp	.+48     	; 0x6a6 <check_password+0x48>
 676:	84 30       	cpi	r24, 0x04	; 4
 678:	51 f4       	brne	.+20     	; 0x68e <check_password+0x30>
 67a:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <digit_count>
 67e:	82 30       	cpi	r24, 0x02	; 2
 680:	91 f4       	brne	.+36     	; 0x6a6 <check_password+0x48>
 682:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <password>
 686:	82 60       	ori	r24, 0x02	; 2
 688:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <password>
 68c:	ea cf       	rjmp	.-44     	; 0x662 <check_password+0x4>
 68e:	85 30       	cpi	r24, 0x05	; 5
 690:	51 f4       	brne	.+20     	; 0x6a6 <check_password+0x48>
 692:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <digit_count>
 696:	83 30       	cpi	r24, 0x03	; 3
 698:	21 f7       	brne	.-56     	; 0x662 <check_password+0x4>
 69a:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <password>
 69e:	84 60       	ori	r24, 0x04	; 4
 6a0:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <password>
 6a4:	04 c0       	rjmp	.+8      	; 0x6ae <check_password+0x50>
 6a6:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <digit_count>
 6aa:	83 30       	cpi	r24, 0x03	; 3
 6ac:	d1 f6       	brne	.-76     	; 0x662 <check_password+0x4>
 6ae:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <password>
 6b2:	87 30       	cpi	r24, 0x07	; 7
 6b4:	91 f0       	breq	.+36     	; 0x6da <check_password+0x7c>
 6b6:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <password>
 6ba:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <digit_count>
 6be:	84 e6       	ldi	r24, 0x64	; 100
 6c0:	b0 df       	rcall	.-160    	; 0x622 <buzzer>
 6c2:	2f ef       	ldi	r18, 0xFF	; 255
 6c4:	84 e3       	ldi	r24, 0x34	; 52
 6c6:	9c e0       	ldi	r25, 0x0C	; 12
 6c8:	21 50       	subi	r18, 0x01	; 1
 6ca:	80 40       	sbci	r24, 0x00	; 0
 6cc:	90 40       	sbci	r25, 0x00	; 0
 6ce:	e1 f7       	brne	.-8      	; 0x6c8 <check_password+0x6a>
 6d0:	00 c0       	rjmp	.+0      	; 0x6d2 <check_password+0x74>
 6d2:	00 00       	nop
 6d4:	80 e0       	ldi	r24, 0x00	; 0
 6d6:	a5 df       	rcall	.-182    	; 0x622 <buzzer>
 6d8:	c4 cf       	rjmp	.-120    	; 0x662 <check_password+0x4>
 6da:	cf 91       	pop	r28
 6dc:	08 95       	ret

000006de <RS485_tx>:
 6de:	97 9a       	sbi	0x12, 7	; 18
 6e0:	67 e0       	ldi	r22, 0x07	; 7
 6e2:	8c e8       	ldi	r24, 0x8C	; 140
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	f6 dc       	rcall	.-1556   	; 0xd4 <UART_tx_m>
 6e8:	08 95       	ret

000006ea <gen_checksum>:
	
}
void gen_checksum(uint8_t *cmd)
{
 6ea:	fc 01       	movw	r30, r24
	cmd[CHKSUM] = (uint8_t)((cmd[YAWH] + cmd[YAWL] + cmd[PIT] + cmd[FIRE] + cmd[MODE]) % 0xFF);
 6ec:	21 81       	ldd	r18, Z+1	; 0x01
 6ee:	82 81       	ldd	r24, Z+2	; 0x02
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	82 0f       	add	r24, r18
 6f4:	91 1d       	adc	r25, r1
 6f6:	23 81       	ldd	r18, Z+3	; 0x03
 6f8:	82 0f       	add	r24, r18
 6fa:	91 1d       	adc	r25, r1
 6fc:	24 81       	ldd	r18, Z+4	; 0x04
 6fe:	82 0f       	add	r24, r18
 700:	91 1d       	adc	r25, r1
 702:	25 81       	ldd	r18, Z+5	; 0x05
 704:	82 0f       	add	r24, r18
 706:	91 1d       	adc	r25, r1
 708:	6f ef       	ldi	r22, 0xFF	; 255
 70a:	70 e0       	ldi	r23, 0x00	; 0
 70c:	2a d1       	rcall	.+596    	; 0x962 <__divmodhi4>
 70e:	86 83       	std	Z+6, r24	; 0x06
 710:	08 95       	ret

00000712 <main>:


int main(void)
{
	// Initial setting
	init();
 712:	71 df       	rcall	.-286    	; 0x5f6 <init>
	UART_init(BAUD_14k, TXRX);
 714:	63 e0       	ldi	r22, 0x03	; 3
 716:	82 e0       	ldi	r24, 0x02	; 2
 718:	b1 dc       	rcall	.-1694   	; 0x7c <UART_init>
	sei();
 71a:	78 94       	sei
   
	// Power on buzzer
	BUZZER1;
 71c:	84 e6       	ldi	r24, 0x64	; 100
 71e:	81 df       	rcall	.-254    	; 0x622 <buzzer>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 720:	2f ef       	ldi	r18, 0xFF	; 255
 722:	80 e7       	ldi	r24, 0x70	; 112
 724:	92 e0       	ldi	r25, 0x02	; 2
 726:	21 50       	subi	r18, 0x01	; 1
 728:	80 40       	sbci	r24, 0x00	; 0
 72a:	90 40       	sbci	r25, 0x00	; 0
 72c:	e1 f7       	brne	.-8      	; 0x726 <main+0x14>
 72e:	00 c0       	rjmp	.+0      	; 0x730 <main+0x1e>
 730:	00 00       	nop
 732:	80 e0       	ldi	r24, 0x00	; 0
 734:	76 df       	rcall	.-276    	; 0x622 <buzzer>
 736:	2f ef       	ldi	r18, 0xFF	; 255
 738:	80 e7       	ldi	r24, 0x70	; 112
 73a:	92 e0       	ldi	r25, 0x02	; 2
 73c:	21 50       	subi	r18, 0x01	; 1
 73e:	80 40       	sbci	r24, 0x00	; 0
 740:	90 40       	sbci	r25, 0x00	; 0
 742:	e1 f7       	brne	.-8      	; 0x73c <main+0x2a>
 744:	00 c0       	rjmp	.+0      	; 0x746 <main+0x34>
 746:	00 00       	nop
 748:	84 e6       	ldi	r24, 0x64	; 100
 74a:	6b df       	rcall	.-298    	; 0x622 <buzzer>
 74c:	2f ef       	ldi	r18, 0xFF	; 255
 74e:	80 e7       	ldi	r24, 0x70	; 112
 750:	92 e0       	ldi	r25, 0x02	; 2
 752:	21 50       	subi	r18, 0x01	; 1
 754:	80 40       	sbci	r24, 0x00	; 0
 756:	90 40       	sbci	r25, 0x00	; 0
 758:	e1 f7       	brne	.-8      	; 0x752 <main+0x40>
 75a:	00 c0       	rjmp	.+0      	; 0x75c <main+0x4a>
 75c:	00 00       	nop
 75e:	80 e0       	ldi	r24, 0x00	; 0
 760:	60 df       	rcall	.-320    	; 0x622 <buzzer>
 762:	2f ef       	ldi	r18, 0xFF	; 255
 764:	80 e7       	ldi	r24, 0x70	; 112
 766:	92 e0       	ldi	r25, 0x02	; 2
 768:	21 50       	subi	r18, 0x01	; 1
 76a:	80 40       	sbci	r24, 0x00	; 0
 76c:	90 40       	sbci	r25, 0x00	; 0
 76e:	e1 f7       	brne	.-8      	; 0x768 <main+0x56>
 770:	00 c0       	rjmp	.+0      	; 0x772 <main+0x60>
 772:	00 00       	nop
   
	// Entering password
	check_password();
 774:	74 df       	rcall	.-280    	; 0x65e <check_password>
   
	// Enabled buzzer
	BUZZER1;
 776:	84 e6       	ldi	r24, 0x64	; 100
 778:	54 df       	rcall	.-344    	; 0x622 <buzzer>
 77a:	2f ef       	ldi	r18, 0xFF	; 255
 77c:	80 e7       	ldi	r24, 0x70	; 112
 77e:	92 e0       	ldi	r25, 0x02	; 2
 780:	21 50       	subi	r18, 0x01	; 1
 782:	80 40       	sbci	r24, 0x00	; 0
 784:	90 40       	sbci	r25, 0x00	; 0
 786:	e1 f7       	brne	.-8      	; 0x780 <main+0x6e>
 788:	00 c0       	rjmp	.+0      	; 0x78a <main+0x78>
 78a:	00 00       	nop
 78c:	80 e0       	ldi	r24, 0x00	; 0
 78e:	49 df       	rcall	.-366    	; 0x622 <buzzer>
 790:	2f ef       	ldi	r18, 0xFF	; 255
 792:	80 e7       	ldi	r24, 0x70	; 112
 794:	92 e0       	ldi	r25, 0x02	; 2
 796:	21 50       	subi	r18, 0x01	; 1
 798:	80 40       	sbci	r24, 0x00	; 0
 79a:	90 40       	sbci	r25, 0x00	; 0
 79c:	e1 f7       	brne	.-8      	; 0x796 <main+0x84>
 79e:	00 c0       	rjmp	.+0      	; 0x7a0 <main+0x8e>
 7a0:	00 00       	nop
 7a2:	84 e6       	ldi	r24, 0x64	; 100
 7a4:	3e df       	rcall	.-388    	; 0x622 <buzzer>
 7a6:	2f ef       	ldi	r18, 0xFF	; 255
 7a8:	80 e7       	ldi	r24, 0x70	; 112
 7aa:	92 e0       	ldi	r25, 0x02	; 2
 7ac:	21 50       	subi	r18, 0x01	; 1
 7ae:	80 40       	sbci	r24, 0x00	; 0
 7b0:	90 40       	sbci	r25, 0x00	; 0
 7b2:	e1 f7       	brne	.-8      	; 0x7ac <main+0x9a>
 7b4:	00 c0       	rjmp	.+0      	; 0x7b6 <main+0xa4>
 7b6:	00 00       	nop
 7b8:	80 e0       	ldi	r24, 0x00	; 0
 7ba:	33 df       	rcall	.-410    	; 0x622 <buzzer>
 7bc:	2f ef       	ldi	r18, 0xFF	; 255
 7be:	80 e7       	ldi	r24, 0x70	; 112
 7c0:	92 e0       	ldi	r25, 0x02	; 2
 7c2:	21 50       	subi	r18, 0x01	; 1
 7c4:	80 40       	sbci	r24, 0x00	; 0
 7c6:	90 40       	sbci	r25, 0x00	; 0
 7c8:	e1 f7       	brne	.-8      	; 0x7c2 <main+0xb0>
 7ca:	00 c0       	rjmp	.+0      	; 0x7cc <main+0xba>
 7cc:	00 00       	nop
					cmd[FIRE] = fire_temp;
				}
				else
				{
					fire_send = OFF;
					cmd[FIRE] = 0;
 7ce:	cc e8       	ldi	r28, 0x8C	; 140
 7d0:	d0 e0       	ldi	r29, 0x00	; 0
		{
			if (buzzer_toggle == OFF)
			{
				BUZZER2;
				buzzer_toggle = ON;
				cmd[MODE] = 0xCC;
 7d2:	0f 2e       	mov	r0, r31
 7d4:	fc ec       	ldi	r31, 0xCC	; 204
 7d6:	af 2e       	mov	r10, r31
 7d8:	f0 2d       	mov	r31, r0
			}
			// Joystick
			else
			{			
				// Set mode
				cmd[MODE] = 0xAA;
 7da:	0f 2e       	mov	r0, r31
 7dc:	fa ea       	ldi	r31, 0xAA	; 170
 7de:	ef 2e       	mov	r14, r31
 7e0:	f0 2d       	mov	r31, r0
				{
					cmd[PIT] = 0xF0;
				}
				else if (!(PIND & PStickM))
				{
					cmd[PIT] = 0x0F;
 7e2:	0f 2e       	mov	r0, r31
 7e4:	ff e0       	ldi	r31, 0x0F	; 15
 7e6:	cf 2e       	mov	r12, r31
 7e8:	f0 2d       	mov	r31, r0
					cmd[YAWL] = 0;
				}
				// Pitch
				if (!(PIND & PStickP))
				{
					cmd[PIT] = 0xF0;
 7ea:	0f 2e       	mov	r0, r31
 7ec:	f0 ef       	ldi	r31, 0xF0	; 240
 7ee:	df 2e       	mov	r13, r31
 7f0:	f0 2d       	mov	r31, r0
			// Selecting keypad and joystick
			// Keypad
			if (PINC & ModeSW)
			{
				// Set mode
				cmd[MODE] = 0xBB;
 7f2:	0f 2e       	mov	r0, r31
 7f4:	fb eb       	ldi	r31, 0xBB	; 187
 7f6:	bf 2e       	mov	r11, r31
 7f8:	f0 2d       	mov	r31, r0
					cmd[FIRE] = fire_temp;
				}
				else
				{
					fire_send = OFF;
					cmd[FIRE] = 0;
 7fa:	0c 2f       	mov	r16, r28
 7fc:	1d 2f       	mov	r17, r29
				fire_toggle = ON;
			}
			else if ((PINB & FIRE_SW) && fire_toggle)
			{
				fire_toggle = OFF;
				fire_send = ON;
 7fe:	ff 24       	eor	r15, r15
 800:	f3 94       	inc	r15
   
	// Main routine
    while (1)
    {
		// Turret Move Mode
		if (PIND & SAFE_SW)
 802:	84 9b       	sbis	0x10, 4	; 16
 804:	5e c0       	rjmp	.+188    	; 0x8c2 <main+0x1b0>
		{
			if (buzzer_toggle == ON)
 806:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <buzzer_toggle>
 80a:	81 30       	cpi	r24, 0x01	; 1
 80c:	71 f5       	brne	.+92     	; 0x86a <main+0x158>
			{
				BUZZER1;
 80e:	84 e6       	ldi	r24, 0x64	; 100
 810:	08 df       	rcall	.-496    	; 0x622 <buzzer>
 812:	2f ef       	ldi	r18, 0xFF	; 255
 814:	80 e7       	ldi	r24, 0x70	; 112
 816:	92 e0       	ldi	r25, 0x02	; 2
 818:	21 50       	subi	r18, 0x01	; 1
 81a:	80 40       	sbci	r24, 0x00	; 0
 81c:	90 40       	sbci	r25, 0x00	; 0
 81e:	e1 f7       	brne	.-8      	; 0x818 <main+0x106>
 820:	00 c0       	rjmp	.+0      	; 0x822 <main+0x110>
 822:	00 00       	nop
 824:	80 e0       	ldi	r24, 0x00	; 0
 826:	fd de       	rcall	.-518    	; 0x622 <buzzer>
 828:	2f ef       	ldi	r18, 0xFF	; 255
 82a:	80 e7       	ldi	r24, 0x70	; 112
 82c:	92 e0       	ldi	r25, 0x02	; 2
 82e:	21 50       	subi	r18, 0x01	; 1
 830:	80 40       	sbci	r24, 0x00	; 0
 832:	90 40       	sbci	r25, 0x00	; 0
 834:	e1 f7       	brne	.-8      	; 0x82e <main+0x11c>
 836:	00 c0       	rjmp	.+0      	; 0x838 <main+0x126>
 838:	00 00       	nop
 83a:	84 e6       	ldi	r24, 0x64	; 100
 83c:	f2 de       	rcall	.-540    	; 0x622 <buzzer>
 83e:	2f ef       	ldi	r18, 0xFF	; 255
 840:	80 e7       	ldi	r24, 0x70	; 112
 842:	92 e0       	ldi	r25, 0x02	; 2
 844:	21 50       	subi	r18, 0x01	; 1
 846:	80 40       	sbci	r24, 0x00	; 0
 848:	90 40       	sbci	r25, 0x00	; 0
 84a:	e1 f7       	brne	.-8      	; 0x844 <main+0x132>
 84c:	00 c0       	rjmp	.+0      	; 0x84e <main+0x13c>
 84e:	00 00       	nop
 850:	80 e0       	ldi	r24, 0x00	; 0
 852:	e7 de       	rcall	.-562    	; 0x622 <buzzer>
 854:	2f ef       	ldi	r18, 0xFF	; 255
 856:	80 e7       	ldi	r24, 0x70	; 112
 858:	92 e0       	ldi	r25, 0x02	; 2
 85a:	21 50       	subi	r18, 0x01	; 1
 85c:	80 40       	sbci	r24, 0x00	; 0
 85e:	90 40       	sbci	r25, 0x00	; 0
 860:	e1 f7       	brne	.-8      	; 0x85a <main+0x148>
 862:	00 c0       	rjmp	.+0      	; 0x864 <main+0x152>
 864:	00 00       	nop
				buzzer_toggle = OFF;
 866:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <buzzer_toggle>
			}
			RLED_ON;
 86a:	96 9a       	sbi	0x12, 6	; 18
			GLED_OFF;
 86c:	95 98       	cbi	0x12, 5	; 18
			
			// Selecting keypad and joystick
			// Keypad
			if (PINC & ModeSW)
 86e:	9b 9b       	sbis	0x13, 3	; 19
 870:	14 c0       	rjmp	.+40     	; 0x89a <main+0x188>
			{
				// Set mode
				cmd[MODE] = 0xBB;
 872:	bd 82       	std	Y+5, r11	; 0x05
			
				// Yaw & Pitch angle input
				keypad_d16 = keypad_read_m();
 874:	39 de       	rcall	.-910    	; 0x4e8 <keypad_read_m>
 876:	90 93 86 00 	sts	0x0086, r25	; 0x800086 <keypad_d16+0x1>
 87a:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <keypad_d16>
				if (keypad_d16 != 0xFFFF)	// if there is input
 87e:	8f 3f       	cpi	r24, 0xFF	; 255
 880:	2f ef       	ldi	r18, 0xFF	; 255
 882:	92 07       	cpc	r25, r18
 884:	09 f4       	brne	.+2      	; 0x888 <main+0x176>
 886:	61 c0       	rjmp	.+194    	; 0x94a <main+0x238>
				{
					if (YPtoggle == YAW)
 888:	20 91 6d 00 	lds	r18, 0x006D	; 0x80006d <YPtoggle>
 88c:	22 30       	cpi	r18, 0x02	; 2
 88e:	19 f4       	brne	.+6      	; 0x896 <main+0x184>
					{
						cmd[YAWH] = (keypad_d16>>8);
 890:	99 83       	std	Y+1, r25	; 0x01
						cmd[YAWL] = keypad_d16;
 892:	8a 83       	std	Y+2, r24	; 0x02
 894:	5a c0       	rjmp	.+180    	; 0x94a <main+0x238>
					}
					else
					{
						cmd[PIT] = keypad_d16;
 896:	8b 83       	std	Y+3, r24	; 0x03
 898:	58 c0       	rjmp	.+176    	; 0x94a <main+0x238>
			}
			// Joystick
			else
			{			
				// Set mode
				cmd[MODE] = 0xAA;
 89a:	ed 82       	std	Y+5, r14	; 0x05
			
				// Joystick input
				// Yaw
				if (!(PINB & YStickP))
 89c:	b2 99       	sbic	0x16, 2	; 22
 89e:	02 c0       	rjmp	.+4      	; 0x8a4 <main+0x192>
				{
					cmd[YAWL] = 0xF0;
 8a0:	da 82       	std	Y+2, r13	; 0x02
 8a2:	05 c0       	rjmp	.+10     	; 0x8ae <main+0x19c>
				}
				else if (!(PINB & YStickM))
 8a4:	b3 99       	sbic	0x16, 3	; 22
 8a6:	02 c0       	rjmp	.+4      	; 0x8ac <main+0x19a>
				{
					cmd[YAWL] = 0x0F;
 8a8:	ca 82       	std	Y+2, r12	; 0x02
 8aa:	01 c0       	rjmp	.+2      	; 0x8ae <main+0x19c>
				}
				else
				{
					cmd[YAWL] = 0;
 8ac:	1a 82       	std	Y+2, r1	; 0x02
				}
				// Pitch
				if (!(PIND & PStickP))
 8ae:	82 99       	sbic	0x10, 2	; 16
 8b0:	02 c0       	rjmp	.+4      	; 0x8b6 <main+0x1a4>
				{
					cmd[PIT] = 0xF0;
 8b2:	db 82       	std	Y+3, r13	; 0x03
 8b4:	4a c0       	rjmp	.+148    	; 0x94a <main+0x238>
				}
				else if (!(PIND & PStickM))
 8b6:	83 99       	sbic	0x10, 3	; 16
 8b8:	02 c0       	rjmp	.+4      	; 0x8be <main+0x1ac>
				{
					cmd[PIT] = 0x0F;
 8ba:	cb 82       	std	Y+3, r12	; 0x03
 8bc:	46 c0       	rjmp	.+140    	; 0x94a <main+0x238>
				}
				else
				{
					cmd[PIT] = 0;
 8be:	1b 82       	std	Y+3, r1	; 0x03
 8c0:	44 c0       	rjmp	.+136    	; 0x94a <main+0x238>
			}
		}
		// Fire Mode
		else
		{
			if (buzzer_toggle == OFF)
 8c2:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <buzzer_toggle>
 8c6:	81 11       	cpse	r24, r1
 8c8:	12 c0       	rjmp	.+36     	; 0x8ee <main+0x1dc>
			{
				BUZZER2;
 8ca:	84 e6       	ldi	r24, 0x64	; 100
 8cc:	aa de       	rcall	.-684    	; 0x622 <buzzer>
 8ce:	8f ef       	ldi	r24, 0xFF	; 255
 8d0:	94 e3       	ldi	r25, 0x34	; 52
 8d2:	2c e0       	ldi	r18, 0x0C	; 12
 8d4:	81 50       	subi	r24, 0x01	; 1
 8d6:	90 40       	sbci	r25, 0x00	; 0
 8d8:	20 40       	sbci	r18, 0x00	; 0
 8da:	e1 f7       	brne	.-8      	; 0x8d4 <main+0x1c2>
 8dc:	00 c0       	rjmp	.+0      	; 0x8de <main+0x1cc>
 8de:	00 00       	nop
 8e0:	80 e0       	ldi	r24, 0x00	; 0
 8e2:	9f de       	rcall	.-706    	; 0x622 <buzzer>
				buzzer_toggle = ON;
 8e4:	f0 92 65 00 	sts	0x0065, r15	; 0x800065 <buzzer_toggle>
				cmd[MODE] = 0xCC;
 8e8:	ad 82       	std	Y+5, r10	; 0x05
				RLED_OFF;
 8ea:	96 98       	cbi	0x12, 6	; 18
				GLED_ON;
 8ec:	95 9a       	sbi	0x12, 5	; 18
			}
			
			
			// Read rocket number
			keypad_d8 = keypad_read_d();
 8ee:	8d dc       	rcall	.-1766   	; 0x20a <keypad_read_d>
 8f0:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <keypad_d8>
			if (keypad_d8 != 0xFF)
 8f4:	8f 3f       	cpi	r24, 0xFF	; 255
 8f6:	11 f0       	breq	.+4      	; 0x8fc <main+0x1ea>
			{
				fire_temp = keypad_d8;
 8f8:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <fire_temp>
			}
			
			if (!(PINB & FIRE_SW))
 8fc:	b0 99       	sbic	0x16, 0	; 22
 8fe:	03 c0       	rjmp	.+6      	; 0x906 <main+0x1f4>
			{
				fire_toggle = ON;
 900:	f0 92 66 00 	sts	0x0066, r15	; 0x800066 <fire_toggle>
 904:	22 c0       	rjmp	.+68     	; 0x94a <main+0x238>
			}
			else if ((PINB & FIRE_SW) && fire_toggle)
 906:	b0 9b       	sbis	0x16, 0	; 22
 908:	0d c0       	rjmp	.+26     	; 0x924 <main+0x212>
 90a:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <fire_toggle>
 90e:	88 23       	and	r24, r24
 910:	49 f0       	breq	.+18     	; 0x924 <main+0x212>
			{
				fire_toggle = OFF;
 912:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <fire_toggle>
				fire_send = ON;
 916:	f0 92 64 00 	sts	0x0064, r15	; 0x800064 <__data_end>
				timer_100ms = 0;
 91a:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <timer_100ms>
				timer_temp_a = 0;
 91e:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <timer_temp_a>
 922:	13 c0       	rjmp	.+38     	; 0x94a <main+0x238>
				
			}
			else if (fire_send)
 924:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
 928:	88 23       	and	r24, r24
 92a:	79 f0       	breq	.+30     	; 0x94a <main+0x238>
			{
				if (timer_100ms < 5)
 92c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <timer_100ms>
 930:	85 30       	cpi	r24, 0x05	; 5
 932:	30 f4       	brcc	.+12     	; 0x940 <main+0x22e>
				{
					timer_toggle = OFF;
 934:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
					cmd[FIRE] = fire_temp;
 938:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <fire_temp>
 93c:	8c 83       	std	Y+4, r24	; 0x04
 93e:	05 c0       	rjmp	.+10     	; 0x94a <main+0x238>
				}
				else
				{
					fire_send = OFF;
 940:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__data_end>
					cmd[FIRE] = 0;
 944:	1c 82       	std	Y+4, r1	; 0x04
					fire_temp = 0;
 946:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <fire_temp>
		// Display
		
		
		
		
		gen_checksum(cmd);
 94a:	80 2f       	mov	r24, r16
 94c:	91 2f       	mov	r25, r17
 94e:	cd de       	rcall	.-614    	; 0x6ea <gen_checksum>
		// Transmit every 40ms
		if (timer_40ms != 0)
 950:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <timer_40ms>
 954:	88 23       	and	r24, r24
 956:	09 f4       	brne	.+2      	; 0x95a <main+0x248>
 958:	54 cf       	rjmp	.-344    	; 0x802 <main+0xf0>
		{
			// TX
			RS485_tx();
 95a:	c1 de       	rcall	.-638    	; 0x6de <RS485_tx>
			
			// RX
			//RS485_rx(launcher_angle, 2);
			
			timer_40ms = 0;
 95c:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <timer_40ms>
 960:	50 cf       	rjmp	.-352    	; 0x802 <main+0xf0>

00000962 <__divmodhi4>:
 962:	97 fb       	bst	r25, 7
 964:	07 2e       	mov	r0, r23
 966:	16 f4       	brtc	.+4      	; 0x96c <__divmodhi4+0xa>
 968:	00 94       	com	r0
 96a:	06 d0       	rcall	.+12     	; 0x978 <__divmodhi4_neg1>
 96c:	77 fd       	sbrc	r23, 7
 96e:	08 d0       	rcall	.+16     	; 0x980 <__divmodhi4_neg2>
 970:	17 d0       	rcall	.+46     	; 0x9a0 <__udivmodhi4>
 972:	07 fc       	sbrc	r0, 7
 974:	05 d0       	rcall	.+10     	; 0x980 <__divmodhi4_neg2>
 976:	3e f4       	brtc	.+14     	; 0x986 <__divmodhi4_exit>

00000978 <__divmodhi4_neg1>:
 978:	90 95       	com	r25
 97a:	81 95       	neg	r24
 97c:	9f 4f       	sbci	r25, 0xFF	; 255
 97e:	08 95       	ret

00000980 <__divmodhi4_neg2>:
 980:	70 95       	com	r23
 982:	61 95       	neg	r22
 984:	7f 4f       	sbci	r23, 0xFF	; 255

00000986 <__divmodhi4_exit>:
 986:	08 95       	ret

00000988 <__umulhisi3>:
 988:	a2 9f       	mul	r26, r18
 98a:	b0 01       	movw	r22, r0
 98c:	b3 9f       	mul	r27, r19
 98e:	c0 01       	movw	r24, r0
 990:	a3 9f       	mul	r26, r19
 992:	01 d0       	rcall	.+2      	; 0x996 <__umulhisi3+0xe>
 994:	b2 9f       	mul	r27, r18
 996:	70 0d       	add	r23, r0
 998:	81 1d       	adc	r24, r1
 99a:	11 24       	eor	r1, r1
 99c:	91 1d       	adc	r25, r1
 99e:	08 95       	ret

000009a0 <__udivmodhi4>:
 9a0:	aa 1b       	sub	r26, r26
 9a2:	bb 1b       	sub	r27, r27
 9a4:	51 e1       	ldi	r21, 0x11	; 17
 9a6:	07 c0       	rjmp	.+14     	; 0x9b6 <__udivmodhi4_ep>

000009a8 <__udivmodhi4_loop>:
 9a8:	aa 1f       	adc	r26, r26
 9aa:	bb 1f       	adc	r27, r27
 9ac:	a6 17       	cp	r26, r22
 9ae:	b7 07       	cpc	r27, r23
 9b0:	10 f0       	brcs	.+4      	; 0x9b6 <__udivmodhi4_ep>
 9b2:	a6 1b       	sub	r26, r22
 9b4:	b7 0b       	sbc	r27, r23

000009b6 <__udivmodhi4_ep>:
 9b6:	88 1f       	adc	r24, r24
 9b8:	99 1f       	adc	r25, r25
 9ba:	5a 95       	dec	r21
 9bc:	a9 f7       	brne	.-22     	; 0x9a8 <__udivmodhi4_loop>
 9be:	80 95       	com	r24
 9c0:	90 95       	com	r25
 9c2:	bc 01       	movw	r22, r24
 9c4:	cd 01       	movw	r24, r26
 9c6:	08 95       	ret

000009c8 <_exit>:
 9c8:	f8 94       	cli

000009ca <__stop_program>:
 9ca:	ff cf       	rjmp	.-2      	; 0x9ca <__stop_program>
